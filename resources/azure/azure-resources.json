{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "administratorLogin": {
      "type": "String"
    },
    "administratorLoginPassword": {
      "type": "SecureString"
    },
    "location": {
      "type": "String"
    },
    "serverName": {
      "type": "String",
      "defaultValue": "sls-movie-api"
    },
    "serverEdition": {
      "type": "String",
      "defaultValue": "Burstable"
    },
    "storageSizeGB": {
      "type": "Int",
      "defaultValue": 32
    },
    "haEnabled": {
      "defaultValue": "Disabled",
      "type": "String"
    },
    "availabilityZone": {
      "defaultValue": "",
      "type": "String"
    },
    "version": {
      "type": "String",
      "defaultValue": "13"
    },
    "tags": {
      "defaultValue": {},
      "type": "Object"
    },
    "firewallRules": {
      "defaultValue": {},
      "type": "Object"
    },
    "backupRetentionDays": {
      "type": "Int",
      "defaultValue": 7
    },
    "geoRedundantBackup": {
      "type": "String",
      "defaultValue": "Disabled"
    },
    "vmName": {
      "defaultValue": "Standard_B1ms",
      "type": "String"
    },
    "vnetData": {
      "defaultValue": {
        "virtualNetworkName": "testVnet",
        "subnetName": "testSubnet",
        "virtualNetworkAddressPrefix": "10.0.0.0/16",
        "virtualNetworkResourceGroupName": "[resourceGroup().name]",
        "location": "eastus2",
        "subscriptionId": "[subscription().subscriptionId]",
        "subnetProperties": {},
        "isNewVnet": false,
        "subnetNeedsUpdate": false,
        "Network": {}
      },
      "type": "Object",
      "metadata": {
        "description": "Vnet data is an object which contains all parameters pertaining to vnet and subnet"
      }
    },
    "identityData": {
      "defaultValue": {},
      "type": "Object"
    },
    "dataEncryptionData": {
      "defaultValue": {},
      "type": "Object"
    }
  },
  "variables": {
    "api": "2021-06-01",
    "databaseName": "movies",
    "firewallRules": [
      {
        "name": "AllowAll_2022-5-12_11-16-19",
        "startIPAddress": "0.0.0.0",
        "endIPAddress": "255.255.255.255"
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
      "apiVersion": "[variables('api')]",
      "name": "[parameters('serverName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('vmName')]",
        "tier": "[parameters('serverEdition')]"
      },
      "identity": "[if(empty(parameters('identityData')), json('null'), parameters('identityData'))]",
      "properties": {
        "version": "[parameters('version')]",
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "Network": "[if(empty(parameters('vnetData').Network), json('null'), parameters('vnetData').Network)]",
        "availabilityZone": "[parameters('availabilityZone')]",
        "Storage": {
          "StorageSizeGB": "[parameters('storageSizeGB')]"
        },
        "Backup": {
          "backupRetentionDays": "[parameters('backupRetentionDays')]",
          "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
        },
        "highAvailability": {
          "mode": "[parameters('haEnabled')]"
        },
        "dataencryption": "[if(empty(parameters('dataEncryptionData')), json('null'), parameters('dataEncryptionData'))]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "name": "[concat('firewallRules-', copyIndex())]",
      "dependsOn": [
        "[concat('Microsoft.DBforPostgreSQL/flexibleServers/', parameters('serverName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
              "name": "[concat(parameters('serverName'),'/',variables('firewallRules')[copyIndex()].name)]",
              "apiVersion": "[variables('api')]",
              "properties": {
                "StartIpAddress": "[variables('firewallRules')[copyIndex()].startIPAddress]",
                "EndIpAddress": "[variables('firewallRules')[copyIndex()].endIPAddress]"
              }
            }
          ]
        }
      },
      "copy": {
        "name": "firewallRulesIterator",
        "count": "[if(greater(length(variables('firewallRules')), 0), length(variables('firewallRules')), 1)]",
        "mode": "Serial"
      },
      "condition": "[greater(length(variables('firewallRules')), 0)]"
    }
  ]
}
